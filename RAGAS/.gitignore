# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# logs
logs/
mlruns/
results/

# models
models/

# datasets
datasets/

# data
data/

# tests
tests/

rag_env/



# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# RAGAS specific ignores
# ======================

# Large dataset files (keep only small sample files)
datasets/rag_v1_ruen/train.json
datasets/rag_bench/texts.json
datasets/rag_bench/questions.json
datasets/rag_bench/documents_for_rag.json
datasets/rag_bench/qa_pairs_full.json

# Vector databases (will be regenerated)
data/vector_db/
datasets/*/vector_db/
**/vector_db/

# MLflow tracking data
mlruns/

# Results and logs (keep structure but ignore content)
results/*.json
results/*.csv
logs/*.log
*.log

# Model cache and downloads
.cache/
models/
*.bin
*.safetensors
*.pt
*.pth
*.ckpt

# Hugging Face cache
.cache/huggingface/
.cache/transformers/
.cache/torch/
.cache/sentence_transformers/

# Model weights and checkpoints
**/pytorch_model.bin
**/model.safetensors
**/adapter_model.bin
**/adapter_model.safetensors
**/pytorch_model-*.bin
**/model-*.safetensors

# Large data files
*.parquet
*.feather
*.h5
*.hdf5
*.pkl
*.pickle

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# Weights & Biases
wandb/

# TensorBoard logs
runs/
tensorboard_logs/

# Large temporary files
*.zip
*.tar.gz
*.tar.bz2
*.7z
*.rar

# Temporary files
*.tmp
*.temp
.DS_Store
Thumbs.db

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Keep important small files for reproduction
!data/documents/sample_document.txt
!data/russian_qa_dataset.json
!datasets/*/download_and_view.py
!datasets/*/qa_pairs.json
!config/*.yaml
!requirements*.txt
!*.md
!*.py
!*.sh
!LICENSE









#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ RAG —Å–∏—Å—Ç–µ–º—ã –Ω–∞ CPU —Å —Ä–∞–∑–Ω—ã–º–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏.
"""

import argparse
import subprocess
import sys
import os
from pathlib import Path

def main():
    parser = argparse.ArgumentParser(description="–ó–∞–ø—É—Å–∫ RAG —Å–∏—Å—Ç–µ–º—ã –Ω–∞ CPU")
    parser.add_argument(
        "--config", 
        choices=["optimized", "test", "base"], 
        default="optimized",
        help="–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: optimized (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è), test (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è), base (–±–∞–∑–æ–≤–∞—è)"
    )
    parser.add_argument(
        "--interface", 
        choices=["gradio", "streamlit"], 
        default="gradio",
        help="–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
    )
    parser.add_argument(
        "--mode",
        choices=["web", "experiment", "test_dataset"],
        default="web",
        help="–†–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞: web (–≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å), experiment (—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç), test_dataset (—Ç–µ—Å—Ç –Ω–∞ –¥–∞—Ç–∞—Å–µ—Ç–µ)"
    )
    
    args = parser.parse_args()
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª
    config_map = {
        "optimized": "config/cpu_optimized_config.yaml",
        "test": "config/cpu_test_config.yaml", 
        "base": "config/base_config.yaml"
    }
    
    config_file = config_map[args.config]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    if not os.path.exists(config_file):
        print(f"‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª {config_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        sys.exit(1)
    
    print(f"üöÄ –ó–∞–ø—É—Å–∫ RAG —Å–∏—Å—Ç–µ–º—ã –Ω–∞ CPU")
    print(f"üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {args.config} ({config_file})")
    print(f"üåê –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å: {args.interface}")
    print(f"‚öôÔ∏è  –†–µ–∂–∏–º: {args.mode}")
    print("-" * 50)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É
    if args.mode == "web":
        cmd = [
            "python", "app.py",
            "--config", config_file,
            "--interface", args.interface
        ]
    elif args.mode == "experiment":
        cmd = [
            "python", "main.py",
            "--config", config_file
        ]
    elif args.mode == "test_dataset":
        cmd = [
            "python", "test_rag_dataset.py",
            "--config", config_file
        ]
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—É
        subprocess.run(cmd, check=True)
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
        sys.exit(1)
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        sys.exit(0)

if __name__ == "__main__":
    main()






